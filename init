#!/usr/bin/env bash
###################
# Init
#
#
#####
# ChangeLog:
# ----------
# 2017-05-26  1.1.0      Now can create project directories as well
# 2017-01-20  1.0.0      Updated to handle multiple file initializations
# 2016-06-08  0.2.0      Can not intiialize a script
# 2016-05-30  0.1.0      Initial script creation
#


#
# CONSTANTS
#
declare -r APP_AUTHOR_NAME="RuneImp"
declare -r APP_AUTHOR_MAIL="runeimp@gmail.com"
declare -r APP_NAME="Init"
declare -r APP_FILE="init"
declare -r APP_VERSION="1.1.0"
declare -r APP_LICENSES="http://opensource.org/licenses/MIT"
declare -r APP_LABEL="${APP_AUTHOR_NAME}'s $APP_NAME v$APP_VERSION
License(s): $APP_LICENSES"


#
# VARIABLES
#

declare -a files
declare -i make_executable=1
declare -i make_project=1


#
# FUNCTIONS
#


ask_yn()
{
	promp="$1"
	yes="$2"
	no="$3"

	read -r -p "${APP_PROMPT_PREFIX} ${promp} [yes/no] (n) " response

	shopt -s nocasematch
	if [[ "$response" =~ ^(y|yes)$ ]]; then
	  [ -z "$yes" ] || echo "$yes"
	  result=0
	else
	  [ -z "$no" ] || echo "$no"
	  result=1
	fi
	shopt -u nocasematch

	return $result
}


create_script()
{
	local filename="$1"

	echo "#!/usr/bin/env bash" > "$filename"
	echo "###################" >> "$filename"
	echo "# $(basename "$filename")" >> "$filename"
	echo "#" >> "$filename"
	echo "#" >> "$filename"
	echo "" >> "$filename"
	echo "" >> "$filename"
	echo "" >> "$filename"
	echo "" >> "$filename"

	chmod +x "$filename"
}


#
# PARSE ARGUMENTS
#

if [[ $# -eq 0 ]]; then
	echo "You must provide the filename(s) to init..." 1>&2
	exit 1
else
	until [[ $# -eq 0 ]]; do
		case "$1" in
			-x | -exec | --executable)
				make_executable=0
				;;
			-p | -proj | --project)
				make_project=0
				;;
			-xp | -px)
				make_executable=0
				make_project=0
				;;
			*)
				files=( "${files[@]}" "$1" )
				;;
		esac
		
		shift
	done
fi


#
# INIT FILE
#
if [[ $make_project -eq 0 ]]; then
	filename="${files[0]}"
	if [[ -e "$filename" ]]; then
		if [[ -d "$filename" ]]; then
			ask_yn "A directory already exists with that name, continue?"
			if [[ $? -eq 0 ]]; then
				cd "$filename"
			else
				exit 0
			fi
		else
			ask_yn "A file already exists with that name, overwrite with project directory?"
			[[ $? -eq 0 ]] && rm "$filename"
		fi
	else
		mkdir "$filename"
		cd "$filename"
	fi
fi

for filename in "${files[@]}"; do
	# echo "-- \$filename: $filename"
	if [[ $make_executable -eq 0 ]]; then
		if [[ -e "$filename" ]]; then
			ask_yn "The file already exists, overwrite?"
			[[ $? -eq 0 ]] && create_script "$filename"
		else
			create_script "$filename"
		fi
	else
		touch "$filename"
	fi
	subl "$filename"
done

